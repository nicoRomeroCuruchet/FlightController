#ifndef PID_CONTROLLER_H
#define PID_CONTROLLER_H

#define CLIP(value, min, max) \
    ((value) < (min) ? (min) : ((value) > (max) ? (max) : (value)))


// PID controller structure
typedef struct {
    float Kp;                  // Proportional gain
    float Ki;                  // Integral gain
    float Kd;                  // Derivative gain
    float T;                   // Sampling period
    float prev_error;          // Previous error
    float setpoint_prev;	   //
    float integral;            // Integral term
    float derivative;          // Derivative term
    float min_integral_limit;  // integral limits
    float max_integral_limit;  // integral limits
    float min_output_limit;	   // min PID limit
    float max_output_limit;	   // max PID limit

} PIDController;

void initializePID(PIDController *pid, float Kp, float Ki, float Kd, float T);
float updatePID(PIDController *pid, float setpoint, float measurement, float measurement_dot);

#endif
